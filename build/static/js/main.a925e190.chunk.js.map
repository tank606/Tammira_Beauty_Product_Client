{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","name","setName","age","setAge","listOfSellers","setListOfSellers","prodName","setprodName","price","setPrice","prodSeller","setprodSeller","listOfProducts","setListOfProducts","selectSeller","setselectSeller","displayProduct","sellerName","Axios","get","then","response","data","catch","console","log","useEffect","className","type","placeholder","onChange","event","target","value","onClick","post","_id","alert","map","val","id","newAge","prompt","put","updateSeller","delete","filter","length","newPrice","newProdSeller","newSellerName","updateProduct","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a925e190.chunk.js","sourcesContent":["import './App.css';\nimport { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\n\nfunction App() {\n  const [name, setName] = useState(\"\");\n  const [age, setAge] = useState(0);\n  const [listOfSellers, setListOfSellers] = useState([]);\n\n  const [prodName, setprodName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [prodSeller, setprodSeller] = useState(\"\");\n  const [listOfProducts, setListOfProducts] = useState([]);\n\n  const [selectSeller, setselectSeller] = useState(\"\");\n\n\n  const addSeller = () => {\n    Axios.post(\"https://beauty-products.herokuapp.com/addseller\", {\n      name: name,\n      age: age,\n    })\n    .then((response) => {\n      // update new user for local machine\n      setListOfSellers([\n        ...listOfSellers,\n        { _id: response.data._id, name: name, age: age },\n      ]);\n    })\n  };\n\n  const addProduct = () => {\n    Axios.post(\"https://beauty-products.herokuapp.com/addproduct\", {\n      name: prodName,\n      price: price,\n      sellerName: prodSeller,\n    })\n    .then((response) => {\n      // update new user for local machine\n      if (selectSeller == response.data.sellerName) {\n        setListOfProducts([\n          ...listOfProducts,\n          { _id: response.data._id, name: prodName, price: price, sellerName: prodSeller},\n        ]);\n      }\n      alert(\"ProductName:\" + prodName + \"  \" + \"PriceName:\" + price + \"  \" + \"Seller:\" + prodSeller);\n    })\n    .catch(() =>{\n      alert(\"does not work\");\n    })\n  };\n\n  const updateSeller = (id) => {\n    const newAge = prompt(\"Enter new age: \");\n    if (newAge) {\n      Axios.put('https://beauty-products.herokuapp.com/update', { newAge: newAge, id: id}).then(() => {\n        setListOfSellers(listOfSellers.map((val) => {\n          return val._id == id ? {_id: id, name: val.name, age: newAge} : val;  \n        }))\n      });\n    }\n  }\n\n  const updateProduct = (id) => {\n    const newPrice = prompt(\"Enter new price: \");\n    const newProdSeller = prompt(\"Enter new Seller: \");\n    if (newProdSeller && newPrice) {\n      Axios.put('https://beauty-products.herokuapp.com/updateproduct', { newSellerName: newProdSeller, newPrice: newPrice, id: id}).then(() => {\n        displayProduct(selectSeller);\n      });\n    }\n  }\n\n  const deleteSeller = (id) => {\n    Axios.delete(`https://beauty-products.herokuapp.com/delete/${id}`).then(() => {\n      setListOfSellers(listOfSellers.filter((val) => {\n        return val._id != id;\n      }));\n      setListOfProducts([]);\n    });\n  }\n\n  const deleteProduct = (id) => {\n    Axios.delete(`https://beauty-products.herokuapp.com/deleteproduct/${id}`).then(() => {\n      setListOfProducts(listOfProducts.filter((val) => {\n        return val._id != id;\n      }))\n    });\n  }\n\n  const displayProduct = (sellerName) => {\n    // use readproduct\n    setselectSeller(sellerName);\n    Axios.get(`https://beauty-products.herokuapp.com/displayproduct/${sellerName}`)\n      .then((response) => {\n        setListOfProducts(response.data);\n        \n      })\n      .catch(() => {\n        console.log(\"ERR\");\n      });\n  }\n\n  useEffect(() => {\n    Axios.get(\"https://beauty-products.herokuapp.com/read\")\n      .then((response) => {\n        // console.log(response);\n        setListOfSellers(response.data);\n      })\n      .catch(() => {\n        console.log(\"ERR\");\n      });\n  }, []); \n\n  return (\n    <div className=\"App\">\n      <div className=\"inputlayout\">\n        <div className=\"inputs\">\n          <input\n              type=\"text\"\n              placeholder=\"Seller name...\"\n              onChange={(event) => {\n                setName(event.target.value);\n              }}\n            />\n            <input\n              type=\"number\"\n              placeholder=\"Seller age...\"\n              onChange={(event) => {\n                setAge(event.target.value);\n              }}\n            />\n            <button onClick={addSeller}>Add Seller</button>\n        </div>\n        <div className=\"inputs\">\n            <input\n              type=\"text\"\n              placeholder=\"Product name...\"\n              onChange={(event) => {\n                setprodName(event.target.value);\n              }}\n            />\n            <input\n              type=\"number\"\n              placeholder=\"Price\"\n              onChange={(event) => {\n                setPrice(event.target.value);\n              }}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"which Seller\"\n              onChange={(event) => {\n                setprodSeller(event.target.value);\n              }}\n            />\n            <button onClick={addProduct}>Add Product</button>\n        </div>\n      </div>\n      \n\n\n      <div className=\"inputlayout\">\n        <div className=\"listOfSellers\">\n          {listOfSellers.map((val) => {\n            return (\n            <div className=\"sellerContainer\">\n              <div className=\"seller\">\n                  <h3>Seller Name: {val.name}</h3>\n                  <h3> Age: {val.age}</h3>\n              </div>\n              <button onClick={() => {\n                updateSeller(val._id);\n              }}>\n              Update\n              </button>\n              <button  id=\"removeBtn\" onClick={() => {\n                deleteSeller(val._id);\n              }}>\n              X\n              </button>\n              <button  id={val.name == selectSeller? \"changeColorBtn\":\"removeBtn\" }\n              onClick={() => {\n                displayProduct(val.name);\n              }}>\n              Product\n              </button>\n            </div>\n            );\n          })}\n        </div>\n\n        {\n        listOfProducts.length != 0 && \n        <div className=\"listOfSellers\">\n          {listOfProducts.map((val) => {\n            return (\n            <div className=\"sellerContainer\">\n              <div className=\"seller\">\n                  <h3>Product Name: {val.name}</h3>\n                  <h3> Price: {val.price}</h3>\n                  <h3>SellerName: {val.sellerName}</h3>\n              </div>\n              <button onClick={() => {\n                updateProduct(val._id);\n              }}>\n              Update\n              </button>\n              <button  id=\"removeBtn\" onClick={() => {\n                deleteProduct(val._id);\n              }}>\n              X\n              </button>\n            </div>\n            );\n          })}\n        </div>\n        }\n      </div>\n      \n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}